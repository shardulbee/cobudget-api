# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `plaid` gem.
# Please instead update this file by running `bin/tapioca sync`.

# typed: true

module Plaid
  class << self
    def configure; end
  end
end

class Plaid::ACHClass
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::ACHClass::ARC = T.let(T.unsafe(nil), String)
Plaid::ACHClass::CBR = T.let(T.unsafe(nil), String)
Plaid::ACHClass::CCD = T.let(T.unsafe(nil), String)
Plaid::ACHClass::CIE = T.let(T.unsafe(nil), String)
Plaid::ACHClass::COR = T.let(T.unsafe(nil), String)
Plaid::ACHClass::CTX = T.let(T.unsafe(nil), String)
Plaid::ACHClass::IAT = T.let(T.unsafe(nil), String)
Plaid::ACHClass::MTE = T.let(T.unsafe(nil), String)
Plaid::ACHClass::PBR = T.let(T.unsafe(nil), String)
Plaid::ACHClass::POP = T.let(T.unsafe(nil), String)
Plaid::ACHClass::POS = T.let(T.unsafe(nil), String)
Plaid::ACHClass::PPD = T.let(T.unsafe(nil), String)
Plaid::ACHClass::RCK = T.let(T.unsafe(nil), String)
Plaid::ACHClass::TEL = T.let(T.unsafe(nil), String)
Plaid::ACHClass::WEB = T.let(T.unsafe(nil), String)

class Plaid::APR
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def apr_percentage; end
  def apr_percentage=(_arg0); end
  def apr_type; end
  def apr_type=(apr_type); end
  def balance_subject_to_apr; end
  def balance_subject_to_apr=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def interest_charge_amount; end
  def interest_charge_amount=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::APR::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::AccountAssets
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def balances; end
  def balances=(_arg0); end
  def build_from_hash(attributes); end
  def days_available; end
  def days_available=(_arg0); end
  def eql?(o); end
  def hash; end
  def historical_balances; end
  def historical_balances=(_arg0); end
  def list_invalid_properties; end
  def mask; end
  def mask=(_arg0); end
  def name; end
  def name=(_arg0); end
  def official_name; end
  def official_name=(_arg0); end
  def owners; end
  def owners=(_arg0); end
  def subtype; end
  def subtype=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions; end
  def transactions=(_arg0); end
  def type; end
  def type=(_arg0); end
  def valid?; end
  def verification_status; end
  def verification_status=(verification_status); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountAssets::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::AccountAssetsAllOf
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def days_available; end
  def days_available=(_arg0); end
  def eql?(o); end
  def hash; end
  def historical_balances; end
  def historical_balances=(_arg0); end
  def list_invalid_properties; end
  def owners; end
  def owners=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions; end
  def transactions=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountBalance
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def available; end
  def available=(_arg0); end
  def build_from_hash(attributes); end
  def current; end
  def current=(_arg0); end
  def eql?(o); end
  def hash; end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def last_updated_datetime; end
  def last_updated_datetime=(_arg0); end
  def limit; end
  def limit=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountBase
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def balances; end
  def balances=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def mask; end
  def mask=(_arg0); end
  def name; end
  def name=(_arg0); end
  def official_name; end
  def official_name=(_arg0); end
  def subtype; end
  def subtype=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def valid?; end
  def verification_status; end
  def verification_status=(verification_status); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountBase::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::AccountFiltersResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def credit; end
  def credit=(_arg0); end
  def depository; end
  def depository=(_arg0); end
  def eql?(o); end
  def hash; end
  def investment; end
  def investment=(_arg0); end
  def list_invalid_properties; end
  def loan; end
  def loan=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountIdentity
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def balances; end
  def balances=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def mask; end
  def mask=(_arg0); end
  def name; end
  def name=(_arg0); end
  def official_name; end
  def official_name=(_arg0); end
  def owners; end
  def owners=(_arg0); end
  def subtype; end
  def subtype=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def valid?; end
  def verification_status; end
  def verification_status=(verification_status); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountIdentity::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::AccountIdentityAllOf
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def owners; end
  def owners=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountSubtype
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::AccountSubtype::AUTO = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::BROKERAGE = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::BUSINESS = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CASH_ISA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CASH_MANAGEMENT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CD = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CHECKING = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::COMMERCIAL = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CONSTRUCTION = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CONSUMER = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::CREDIT_CARD = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::EDUCATION_SAVINGS_ACCOUNT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::GIC = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::HEALTH_REIMBURSEMENT_ARRANGEMENT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::HOME = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::HOME_EQUITY = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::HSA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::IRA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::ISA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::KEOGH = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::LIF = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::LINE_OF_CREDIT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::LIRA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::LOAN = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::LRIF = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::LRSP = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::MONEY_MARKET = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::MORTGAGE = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::MUTUAL_FUND = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::N401A = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::N401K = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::N403_B = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::N457B = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::N529 = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::NON_TAXABLE_BROKERAGE_ACCOUNT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::NULL = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::OTHER = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::OVERDRAFT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::PAYPAL = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::PENSION = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::PREPAID = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::PRIF = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::PROFIT_SHARING_PLAN = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RDSP = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RECURRING = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RESP = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RETIREMENT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::REWARDS = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RLIF = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::ROTH = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::ROTH_401K = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RRIF = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::RRSP = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::SAFE_DEPOSIT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::SARSEP = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::SAVINGS = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::SEP_IRA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::SIMPLE_IRA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::SIPP = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::STOCK_PLAN = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::STUDENT = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::TFSA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::THRIFT_SAVINGS_PLAN = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::TRUST = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::UGMA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::UTMA = T.let(T.unsafe(nil), String)
Plaid::AccountSubtype::VARIABLE_ANNUITY = T.let(T.unsafe(nil), String)

class Plaid::AccountType
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::AccountType::BROKERAGE = T.let(T.unsafe(nil), String)
Plaid::AccountType::CREDIT = T.let(T.unsafe(nil), String)
Plaid::AccountType::DEPOSITORY = T.let(T.unsafe(nil), String)
Plaid::AccountType::INVESTMENT = T.let(T.unsafe(nil), String)
Plaid::AccountType::LOAN = T.let(T.unsafe(nil), String)
Plaid::AccountType::OTHER = T.let(T.unsafe(nil), String)

class Plaid::AccountsBalanceGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountsBalanceGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def min_last_updated_datetime; end
  def min_last_updated_datetime=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountsGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountsGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AccountsGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Address
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def data; end
  def data=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def primary; end
  def primary=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AddressData
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def postal_code; end
  def postal_code=(_arg0); end
  def region; end
  def region=(_arg0); end
  def street; end
  def street=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ApiClient
  def initialize(config = T.unsafe(nil)); end

  def build_collection_param(param, collection_format); end
  def build_request(http_method, path, request, opts = T.unsafe(nil)); end
  def build_request_body(header_params, form_params, body); end
  def build_request_url(path); end
  def call_api(http_method, path, opts = T.unsafe(nil)); end
  def config; end
  def config=(_arg0); end
  def convert_to_type(data, return_type); end
  def default_headers; end
  def default_headers=(_arg0); end
  def deserialize(response, return_type); end
  def json_mime?(mime); end
  def object_to_hash(obj); end
  def object_to_http_body(model); end
  def prepare_file(response); end
  def sanitize_filename(filename); end
  def select_header_accept(accepts); end
  def select_header_content_type(content_types); end
  def update_params_for_auth!(header_params, query_params, auth_names); end
  def user_agent=(user_agent); end

  class << self
    def default; end
  end
end

class Plaid::ApiError < ::StandardError
  def initialize(arg = T.unsafe(nil)); end

  def code; end
  def message; end
  def response_body; end
  def response_headers; end
  def to_s; end
end

class Plaid::Application
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def application_id; end
  def application_id=(_arg0); end
  def application_url; end
  def application_url=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def logo_url; end
  def logo_url=(_arg0); end
  def name; end
  def name=(_arg0); end
  def reason_for_access; end
  def reason_for_access=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ApplicationGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def application_id; end
  def application_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ApplicationGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def application; end
  def application=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReport
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_report_id; end
  def client_report_id=(_arg0); end
  def date_generated; end
  def date_generated=(_arg0); end
  def days_requested; end
  def days_requested=(_arg0); end
  def eql?(o); end
  def hash; end
  def items; end
  def items=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def user; end
  def user=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportAuditCopyCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def auditor_id; end
  def auditor_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportAuditCopyCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def audit_copy_token; end
  def audit_copy_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportAuditCopyGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def audit_copy_token; end
  def audit_copy_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportAuditCopyRemoveRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def audit_copy_token; end
  def audit_copy_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportAuditCopyRemoveResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def removed; end
  def removed=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_tokens; end
  def access_tokens=(access_tokens); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def days_requested; end
  def days_requested=(days_requested); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportCreateRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_report_id; end
  def client_report_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def user; end
  def user=(_arg0); end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportFilterRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids_to_exclude; end
  def account_ids_to_exclude=(_arg0); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportFilterResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def include_insights; end
  def include_insights=(_arg0); end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def report; end
  def report=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def warnings; end
  def warnings=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportItem
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def date_last_updated; end
  def date_last_updated=(_arg0); end
  def eql?(o); end
  def hash; end
  def institution_id; end
  def institution_id=(_arg0); end
  def institution_name; end
  def institution_name=(_arg0); end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportPDFGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportRefreshRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def days_requested; end
  def days_requested=(days_requested); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportRefreshRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_report_id; end
  def client_report_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def user; end
  def user=(_arg0); end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportRefreshResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportRemoveRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_token; end
  def asset_report_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportRemoveResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def removed; end
  def removed=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportTransaction
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def account_owner; end
  def account_owner=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def authorized_date; end
  def authorized_date=(_arg0); end
  def authorized_datetime; end
  def authorized_datetime=(_arg0); end
  def build_from_hash(attributes); end
  def category; end
  def category=(_arg0); end
  def category_id; end
  def category_id=(_arg0); end
  def date; end
  def date=(_arg0); end
  def date_transacted; end
  def date_transacted=(_arg0); end
  def datetime; end
  def datetime=(_arg0); end
  def eql?(o); end
  def hash; end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def location; end
  def location=(_arg0); end
  def merchant_name; end
  def merchant_name=(_arg0); end
  def name; end
  def name=(_arg0); end
  def original_description; end
  def original_description=(_arg0); end
  def payment_channel; end
  def payment_channel=(payment_channel); end
  def payment_meta; end
  def payment_meta=(_arg0); end
  def pending; end
  def pending=(_arg0); end
  def pending_transaction_id; end
  def pending_transaction_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transaction_code; end
  def transaction_code=(_arg0); end
  def transaction_id; end
  def transaction_id=(_arg0); end
  def transaction_type; end
  def transaction_type=(transaction_type); end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportTransaction::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::AssetReportTransactionAllOf
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def date_transacted; end
  def date_transacted=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def original_description; end
  def original_description=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetReportUser
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_user_id; end
  def client_user_id=(_arg0); end
  def email; end
  def email=(_arg0); end
  def eql?(o); end
  def first_name; end
  def first_name=(_arg0); end
  def hash; end
  def last_name; end
  def last_name=(_arg0); end
  def list_invalid_properties; end
  def middle_name; end
  def middle_name=(_arg0); end
  def phone_number; end
  def phone_number=(_arg0); end
  def ssn; end
  def ssn=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetsErrorWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AssetsProductReadyWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AuthGetNumbers
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def ach; end
  def ach=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def eft; end
  def eft=(_arg0); end
  def eql?(o); end
  def hash; end
  def international; end
  def international=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AuthGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AuthGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AuthGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def numbers; end
  def numbers=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::AutomaticallyVerifiedWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransfer
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def ach_class; end
  def ach_class=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def build_from_hash(attributes); end
  def cancellable; end
  def cancellable=(_arg0); end
  def created; end
  def created=(_arg0); end
  def custom_tag; end
  def custom_tag=(_arg0); end
  def description; end
  def description=(_arg0); end
  def direction; end
  def direction=(_arg0); end
  def eql?(o); end
  def failure_reason; end
  def failure_reason=(_arg0); end
  def hash; end
  def id; end
  def id=(_arg0); end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def metadata; end
  def metadata=(metadata); end
  def network; end
  def network=(_arg0); end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def status; end
  def status=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def user; end
  def user=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferBalance
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def available; end
  def available=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactable; end
  def transactable=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferBalanceGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferBalanceGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def balance; end
  def balance=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferCancelRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer_id; end
  def bank_transfer_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferCancelResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def ach_class; end
  def ach_class=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def custom_tag; end
  def custom_tag=(custom_tag); end
  def description; end
  def description=(description); end
  def eql?(o); end
  def hash; end
  def idempotency_key; end
  def idempotency_key=(idempotency_key); end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def metadata; end
  def metadata=(metadata); end
  def network; end
  def network=(_arg0); end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def user; end
  def user=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer; end
  def bank_transfer=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferDirection
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::BankTransferDirection::INBOUND = T.let(T.unsafe(nil), String)
Plaid::BankTransferDirection::OUTBOUND = T.let(T.unsafe(nil), String)

class Plaid::BankTransferEvent
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def bank_transfer_amount; end
  def bank_transfer_amount=(_arg0); end
  def bank_transfer_id; end
  def bank_transfer_id=(_arg0); end
  def bank_transfer_iso_currency_code; end
  def bank_transfer_iso_currency_code=(_arg0); end
  def bank_transfer_type; end
  def bank_transfer_type=(_arg0); end
  def build_from_hash(attributes); end
  def direction; end
  def direction=(_arg0); end
  def eql?(o); end
  def event_id; end
  def event_id=(event_id); end
  def event_type; end
  def event_type=(_arg0); end
  def failure_reason; end
  def failure_reason=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def receiver_details; end
  def receiver_details=(_arg0); end
  def timestamp; end
  def timestamp=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferEventListRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def bank_transfer_id; end
  def bank_transfer_id=(_arg0); end
  def bank_transfer_type; end
  def bank_transfer_type=(bank_transfer_type); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def count; end
  def count=(count); end
  def direction; end
  def direction=(_arg0); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def event_types; end
  def event_types=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def offset; end
  def offset=(offset); end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferEventListRequest::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::BankTransferEventListResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer_events; end
  def bank_transfer_events=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferEventSyncRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def after_id; end
  def after_id=(after_id); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def count; end
  def count=(count); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferEventSyncResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer_events; end
  def bank_transfer_events=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferEventType
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::BankTransferEventType::CANCELLED = T.let(T.unsafe(nil), String)
Plaid::BankTransferEventType::FAILED = T.let(T.unsafe(nil), String)
Plaid::BankTransferEventType::PENDING = T.let(T.unsafe(nil), String)
Plaid::BankTransferEventType::POSTED = T.let(T.unsafe(nil), String)
Plaid::BankTransferEventType::RECEIVER_PENDING = T.let(T.unsafe(nil), String)
Plaid::BankTransferEventType::RECEIVER_POSTED = T.let(T.unsafe(nil), String)
Plaid::BankTransferEventType::REVERSED = T.let(T.unsafe(nil), String)

class Plaid::BankTransferFailure
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def ach_return_code; end
  def ach_return_code=(_arg0); end
  def build_from_hash(attributes); end
  def description; end
  def description=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer_id; end
  def bank_transfer_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer; end
  def bank_transfer=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferListRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def count; end
  def count=(count); end
  def direction; end
  def direction=(_arg0); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def offset; end
  def offset=(offset); end
  def origination_account_id; end
  def origination_account_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferListResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfers; end
  def bank_transfers=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferMigrateAccountRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_number; end
  def account_number=(_arg0); end
  def account_type; end
  def account_type=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def routing_number; end
  def routing_number=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferMigrateAccountResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferNetwork
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::BankTransferNetwork::ACH = T.let(T.unsafe(nil), String)
Plaid::BankTransferNetwork::SAME_DAY_ACH = T.let(T.unsafe(nil), String)
Plaid::BankTransferNetwork::WIRE = T.let(T.unsafe(nil), String)

class Plaid::BankTransferReceiverDetails
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def available_balance; end
  def available_balance=(available_balance); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransferReceiverDetails::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::BankTransferStatus
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::BankTransferStatus::CANCELLED = T.let(T.unsafe(nil), String)
Plaid::BankTransferStatus::FAILED = T.let(T.unsafe(nil), String)
Plaid::BankTransferStatus::PENDING = T.let(T.unsafe(nil), String)
Plaid::BankTransferStatus::POSTED = T.let(T.unsafe(nil), String)
Plaid::BankTransferStatus::REVERSED = T.let(T.unsafe(nil), String)

class Plaid::BankTransferType
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::BankTransferType::CREDIT = T.let(T.unsafe(nil), String)
Plaid::BankTransferType::DEBIT = T.let(T.unsafe(nil), String)

class Plaid::BankTransferUser
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def email_address; end
  def email_address=(_arg0); end
  def eql?(o); end
  def hash; end
  def legal_name; end
  def legal_name=(_arg0); end
  def list_invalid_properties; end
  def routing_number; end
  def routing_number=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::BankTransfersEventsUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::CategoriesGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def categories; end
  def categories=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Category
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def category_id; end
  def category_id=(_arg0); end
  def eql?(o); end
  def group; end
  def group=(_arg0); end
  def hash; end
  def hierarchy; end
  def hierarchy=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Cause
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Configuration
  def initialize; end

  def access_token; end
  def access_token=(_arg0); end
  def api_key; end
  def api_key=(_arg0); end
  def api_key_prefix; end
  def api_key_prefix=(_arg0); end
  def api_key_with_prefix(param_name); end
  def auth_settings; end
  def base_path; end
  def base_path=(base_path); end
  def base_url(operation = T.unsafe(nil)); end
  def basic_auth_token; end
  def client_side_validation; end
  def client_side_validation=(_arg0); end
  def configure; end
  def debugging; end
  def debugging=(_arg0); end
  def force_ending_format; end
  def force_ending_format=(_arg0); end
  def host; end
  def host=(host); end
  def inject_format; end
  def inject_format=(_arg0); end
  def logger; end
  def logger=(_arg0); end
  def operation_server_settings; end
  def params_encoding; end
  def params_encoding=(_arg0); end
  def password; end
  def password=(_arg0); end
  def scheme; end
  def scheme=(scheme); end
  def server_index; end
  def server_index=(_arg0); end
  def server_operation_index; end
  def server_operation_index=(_arg0); end
  def server_operation_variables; end
  def server_operation_variables=(_arg0); end
  def server_settings; end
  def server_url(index, variables = T.unsafe(nil), servers = T.unsafe(nil)); end
  def server_variables; end
  def server_variables=(_arg0); end
  def ssl_ca_file; end
  def ssl_ca_file=(_arg0); end
  def ssl_client_cert; end
  def ssl_client_cert=(_arg0); end
  def ssl_client_key; end
  def ssl_client_key=(_arg0); end
  def ssl_verify; end
  def ssl_verify=(_arg0); end
  def ssl_verify_mode; end
  def ssl_verify_mode=(_arg0); end
  def temp_folder_path; end
  def temp_folder_path=(_arg0); end
  def timeout; end
  def timeout=(_arg0); end
  def username; end
  def username=(_arg0); end

  class << self
    def default; end
  end
end

Plaid::Configuration::Environment = T.let(T.unsafe(nil), Hash)

class Plaid::CountryCode
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::CountryCode::CA = T.let(T.unsafe(nil), String)
Plaid::CountryCode::ES = T.let(T.unsafe(nil), String)
Plaid::CountryCode::FR = T.let(T.unsafe(nil), String)
Plaid::CountryCode::GB = T.let(T.unsafe(nil), String)
Plaid::CountryCode::IE = T.let(T.unsafe(nil), String)
Plaid::CountryCode::NL = T.let(T.unsafe(nil), String)
Plaid::CountryCode::US = T.let(T.unsafe(nil), String)

class Plaid::CreditCardLiability
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def aprs; end
  def aprs=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def is_overdue; end
  def is_overdue=(_arg0); end
  def last_payment_amount; end
  def last_payment_amount=(_arg0); end
  def last_payment_date; end
  def last_payment_date=(_arg0); end
  def last_statement_issue_date; end
  def last_statement_issue_date=(_arg0); end
  def list_invalid_properties; end
  def minimum_payment_amount; end
  def minimum_payment_amount=(_arg0); end
  def next_payment_due_date; end
  def next_payment_due_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::CreditFilter
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_subtypes; end
  def account_subtypes=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DefaultUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def new_transactions; end
  def new_transactions=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchAddressData
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def postal_code; end
  def postal_code=(_arg0); end
  def region; end
  def region=(_arg0); end
  def street; end
  def street=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchAltCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def target_account; end
  def target_account=(_arg0); end
  def target_user; end
  def target_user=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchAltCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def deposit_switch_id; end
  def deposit_switch_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def target_access_token; end
  def target_access_token=(_arg0); end
  def target_account_id; end
  def target_account_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def deposit_switch_id; end
  def deposit_switch_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def deposit_switch_id; end
  def deposit_switch_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_has_multiple_allocations; end
  def account_has_multiple_allocations=(_arg0); end
  def amount_allocated; end
  def amount_allocated=(_arg0); end
  def build_from_hash(attributes); end
  def date_completed; end
  def date_completed=(_arg0); end
  def date_created; end
  def date_created=(_arg0); end
  def deposit_switch_id; end
  def deposit_switch_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def is_allocated_remainder; end
  def is_allocated_remainder=(_arg0); end
  def list_invalid_properties; end
  def percent_allocated; end
  def percent_allocated=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def state; end
  def state=(state); end
  def target_account_id; end
  def target_account_id=(_arg0); end
  def target_item_id; end
  def target_item_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchGetResponse::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::DepositSwitchTargetAccount
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_name; end
  def account_name=(_arg0); end
  def account_number; end
  def account_number=(_arg0); end
  def account_subtype; end
  def account_subtype=(account_subtype); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def routing_number; end
  def routing_number=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchTargetAccount::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::DepositSwitchTargetUser
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def build_from_hash(attributes); end
  def email; end
  def email=(_arg0); end
  def eql?(o); end
  def family_name; end
  def family_name=(_arg0); end
  def given_name; end
  def given_name=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def phone; end
  def phone=(_arg0); end
  def tax_payer_id; end
  def tax_payer_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def deposit_switch_id; end
  def deposit_switch_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositSwitchTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def deposit_switch_token; end
  def deposit_switch_token=(_arg0); end
  def deposit_switch_token_expiration_time; end
  def deposit_switch_token_expiration_time=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::DepositoryFilter
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_subtypes; end
  def account_subtypes=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Email
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def data; end
  def data=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def primary; end
  def primary=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(type); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Email::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::Employee
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def ssn_masked; end
  def ssn_masked=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::EmployeeIncomeSummaryFieldString
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Employer
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def build_from_hash(attributes); end
  def confidence_score; end
  def confidence_score=(_arg0); end
  def employer_id; end
  def employer_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::EmployerIncomeSummaryFieldString
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::EmployersSearchRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def products; end
  def products=(_arg0); end
  def query; end
  def query=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::EmployersSearchResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def employers; end
  def employers=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Error
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def causes; end
  def causes=(_arg0); end
  def display_message; end
  def display_message=(_arg0); end
  def documentation_url; end
  def documentation_url=(_arg0); end
  def eql?(o); end
  def error_code; end
  def error_code=(_arg0); end
  def error_message; end
  def error_message=(_arg0); end
  def error_type; end
  def error_type=(error_type); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def status; end
  def status=(_arg0); end
  def suggested_action; end
  def suggested_action=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Error::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::ExternalPaymentOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def request_refund_details; end
  def request_refund_details=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ExternalPaymentRefundDetails
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ExternalPaymentSchedule
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def interval; end
  def interval=(_arg0); end
  def interval_execution_day; end
  def interval_execution_day=(_arg0); end
  def list_invalid_properties; end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ExternalPaymentScheduleGet
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def adjusted_start_date; end
  def adjusted_start_date=(_arg0); end
  def build_from_hash(attributes); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def interval; end
  def interval=(_arg0); end
  def interval_execution_day; end
  def interval_execution_day=(_arg0); end
  def list_invalid_properties; end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::HealthIncident
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def incident_updates; end
  def incident_updates=(_arg0); end
  def list_invalid_properties; end
  def start_date; end
  def start_date=(_arg0); end
  def title; end
  def title=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::HistoricalBalance
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def current; end
  def current=(_arg0); end
  def date; end
  def date=(_arg0); end
  def eql?(o); end
  def hash; end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::HistoricalUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def new_transactions; end
  def new_transactions=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Holding
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def cost_basis; end
  def cost_basis=(_arg0); end
  def eql?(o); end
  def hash; end
  def institution_price; end
  def institution_price=(_arg0); end
  def institution_price_as_of; end
  def institution_price_as_of=(_arg0); end
  def institution_value; end
  def institution_value=(_arg0); end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def quantity; end
  def quantity=(_arg0); end
  def security_id; end
  def security_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::HoldingsDefaultUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def new_holdings; end
  def new_holdings=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def updated_holdings; end
  def updated_holdings=(_arg0); end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IdentityGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IdentityGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IdentityGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncidentUpdate
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def description; end
  def description=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def status; end
  def status=(status); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def updated_date; end
  def updated_date=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncidentUpdate::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::IncomeBreakdown
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def hours; end
  def hours=(_arg0); end
  def list_invalid_properties; end
  def rate; end
  def rate=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def total; end
  def total=(_arg0); end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeSummary
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def employee_name; end
  def employee_name=(_arg0); end
  def employer_name; end
  def employer_name=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def pay_frequency; end
  def pay_frequency=(_arg0); end
  def projected_wage; end
  def projected_wage=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def verified_transaction; end
  def verified_transaction=(_arg0); end
  def ytd_gross_income; end
  def ytd_gross_income=(_arg0); end
  def ytd_net_income; end
  def ytd_net_income=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeSummaryFieldNumber
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeSummaryFieldString
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def income_verification_id; end
  def income_verification_id=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationDocumentsDownloadRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def income_verification_id; end
  def income_verification_id=(_arg0); end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationDocumentsDownloadResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def id; end
  def id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationPaystubGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def income_verification_id; end
  def income_verification_id=(_arg0); end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationPaystubGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def paystub; end
  def paystub=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationStatusWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def income_verification_id; end
  def income_verification_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def verification_status; end
  def verification_status=(_arg0); end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationSummaryGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def income_verification_id; end
  def income_verification_id=(_arg0); end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationSummaryGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def income_summaries; end
  def income_summaries=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::IncomeVerificationWebhookStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def id; end
  def id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InflowModel
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def income_amount; end
  def income_amount=(_arg0); end
  def list_invalid_properties; end
  def payment_day_of_month; end
  def payment_day_of_month=(_arg0); end
  def statement_day_of_month; end
  def statement_day_of_month=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transaction_name; end
  def transaction_name=(_arg0); end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InitialUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def new_transactions; end
  def new_transactions=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Institution
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def country_codes; end
  def country_codes=(_arg0); end
  def eql?(o); end
  def hash; end
  def institution_id; end
  def institution_id=(_arg0); end
  def list_invalid_properties; end
  def logo; end
  def logo=(_arg0); end
  def name; end
  def name=(_arg0); end
  def oauth; end
  def oauth=(_arg0); end
  def payment_initiation_metadata; end
  def payment_initiation_metadata=(_arg0); end
  def primary_color; end
  def primary_color=(_arg0); end
  def products; end
  def products=(_arg0); end
  def routing_numbers; end
  def routing_numbers=(_arg0); end
  def status; end
  def status=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def url; end
  def url=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def auth; end
  def auth=(_arg0); end
  def balance; end
  def balance=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def health_incidents; end
  def health_incidents=(_arg0); end
  def identity; end
  def identity=(_arg0); end
  def investments_updates; end
  def investments_updates=(_arg0); end
  def item_logins; end
  def item_logins=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions_updates; end
  def transactions_updates=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsGetByIdRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def country_codes; end
  def country_codes=(_arg0); end
  def eql?(o); end
  def hash; end
  def institution_id; end
  def institution_id=(_arg0); end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsGetByIdRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def include_optional_metadata; end
  def include_optional_metadata=(_arg0); end
  def include_payment_initiation_metadata; end
  def include_payment_initiation_metadata=(_arg0); end
  def include_status; end
  def include_status=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsGetByIdResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def institution; end
  def institution=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def count; end
  def count=(count); end
  def country_codes; end
  def country_codes=(country_codes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def offset; end
  def offset=(_arg0); end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def include_optional_metadata; end
  def include_optional_metadata=(_arg0); end
  def include_payment_initiation_metadata; end
  def include_payment_initiation_metadata=(_arg0); end
  def list_invalid_properties; end
  def oauth; end
  def oauth=(_arg0); end
  def products; end
  def products=(_arg0); end
  def routing_numbers; end
  def routing_numbers=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def institutions; end
  def institutions=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def total; end
  def total=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsSearchAccountFilter
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def credit; end
  def credit=(_arg0); end
  def depository; end
  def depository=(_arg0); end
  def eql?(o); end
  def hash; end
  def investment; end
  def investment=(_arg0); end
  def list_invalid_properties; end
  def loan; end
  def loan=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsSearchPaymentInitiationOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsSearchRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def country_codes; end
  def country_codes=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def products; end
  def products=(products); end
  def query; end
  def query=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsSearchRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def include_optional_metadata; end
  def include_optional_metadata=(_arg0); end
  def include_payment_initiation_metadata; end
  def include_payment_initiation_metadata=(_arg0); end
  def list_invalid_properties; end
  def oauth; end
  def oauth=(_arg0); end
  def payment_initiation; end
  def payment_initiation=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InstitutionsSearchResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def institutions; end
  def institutions=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentFilter
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_subtypes; end
  def account_subtypes=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentHoldingsGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentTransaction
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def build_from_hash(attributes); end
  def cancel_transaction_id; end
  def cancel_transaction_id=(_arg0); end
  def date; end
  def date=(_arg0); end
  def eql?(o); end
  def fees; end
  def fees=(_arg0); end
  def hash; end
  def investment_transaction_id; end
  def investment_transaction_id=(_arg0); end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def price; end
  def price=(_arg0); end
  def quantity; end
  def quantity=(_arg0); end
  def security_id; end
  def security_id=(_arg0); end
  def subtype; end
  def subtype=(subtype); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(type); end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentTransaction::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::InvestmentsDefaultUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def canceled_investments_transactions; end
  def canceled_investments_transactions=(_arg0); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def new_investments_transactions; end
  def new_investments_transactions=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentsHoldingsGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentsHoldingsGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def holdings; end
  def holdings=(_arg0); end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def securities; end
  def securities=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentsTransactionsGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentsTransactionsGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def count; end
  def count=(count); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def offset; end
  def offset=(offset); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::InvestmentsTransactionsGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def investment_transactions; end
  def investment_transactions=(_arg0); end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def securities; end
  def securities=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def total_investment_transactions; end
  def total_investment_transactions=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Item
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def available_products; end
  def available_products=(_arg0); end
  def billed_products; end
  def billed_products=(_arg0); end
  def build_from_hash(attributes); end
  def consent_expiration_time; end
  def consent_expiration_time=(_arg0); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def institution_id; end
  def institution_id=(_arg0); end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def update_type; end
  def update_type=(update_type); end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Item::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::ItemAccessTokenInvalidateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemAccessTokenInvalidateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def new_access_token; end
  def new_access_token=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemErrorWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def status; end
  def status=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemImportRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def products; end
  def products=(products); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def user_auth; end
  def user_auth=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemImportRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemImportRequestUserAuth
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def auth_token; end
  def auth_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def user_id; end
  def user_id=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemImportResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemProductReadyWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemPublicTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemPublicTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def expiration; end
  def expiration=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def public_token; end
  def public_token=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemPublicTokenExchangeRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def public_token; end
  def public_token=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemPublicTokenExchangeResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemRemoveRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemRemoveResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def investments; end
  def investments=(_arg0); end
  def last_webhook; end
  def last_webhook=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions; end
  def transactions=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemWebhookUpdateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ItemWebhookUpdateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::JWKPublicKey
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def alg; end
  def alg=(_arg0); end
  def build_from_hash(attributes); end
  def created_at; end
  def created_at=(_arg0); end
  def crv; end
  def crv=(_arg0); end
  def eql?(o); end
  def expired_at; end
  def expired_at=(_arg0); end
  def hash; end
  def kid; end
  def kid=(_arg0); end
  def kty; end
  def kty=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def use; end
  def use=(_arg0); end
  def valid?; end
  def x; end
  def x=(_arg0); end
  def y; end
  def y=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::JWTHeader
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def id; end
  def id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LiabilitiesDefaultUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids_with_new_liabilities; end
  def account_ids_with_new_liabilities=(_arg0); end
  def account_ids_with_updated_liabilities; end
  def account_ids_with_updated_liabilities=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LiabilitiesGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LiabilitiesGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LiabilitiesGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def liabilities; end
  def liabilities=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LiabilitiesObject
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def credit; end
  def credit=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def mortgage; end
  def mortgage=(_arg0); end
  def student; end
  def student=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LiabilityOverride
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def balance_transfer_apr; end
  def balance_transfer_apr=(_arg0); end
  def build_from_hash(attributes); end
  def cash_apr; end
  def cash_apr=(_arg0); end
  def eql?(o); end
  def expected_payoff_date; end
  def expected_payoff_date=(_arg0); end
  def guarantor; end
  def guarantor=(_arg0); end
  def hash; end
  def interest_capitalization_grace_period_months; end
  def interest_capitalization_grace_period_months=(_arg0); end
  def is_federal; end
  def is_federal=(_arg0); end
  def is_overdue; end
  def is_overdue=(_arg0); end
  def last_payment_amount; end
  def last_payment_amount=(_arg0); end
  def list_invalid_properties; end
  def loan_name; end
  def loan_name=(_arg0); end
  def loan_status; end
  def loan_status=(_arg0); end
  def minimum_payment_amount; end
  def minimum_payment_amount=(_arg0); end
  def nominal_apr; end
  def nominal_apr=(_arg0); end
  def origination_date; end
  def origination_date=(_arg0); end
  def payment_reference_number; end
  def payment_reference_number=(_arg0); end
  def principal; end
  def principal=(_arg0); end
  def pslf_status; end
  def pslf_status=(_arg0); end
  def purchase_apr; end
  def purchase_apr=(_arg0); end
  def repayment_model; end
  def repayment_model=(_arg0); end
  def repayment_plan_description; end
  def repayment_plan_description=(_arg0); end
  def repayment_plan_type; end
  def repayment_plan_type=(_arg0); end
  def sequence_number; end
  def sequence_number=(_arg0); end
  def servicer_address; end
  def servicer_address=(_arg0); end
  def special_apr; end
  def special_apr=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenAccountFilters
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def credit; end
  def credit=(_arg0); end
  def depository; end
  def depository=(_arg0); end
  def eql?(o); end
  def hash; end
  def investment; end
  def investment=(_arg0); end
  def list_invalid_properties; end
  def loan; end
  def loan=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_filters; end
  def account_filters=(_arg0); end
  def android_package_name; end
  def android_package_name=(_arg0); end
  def auth; end
  def auth=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def client_name; end
  def client_name=(_arg0); end
  def country_codes; end
  def country_codes=(country_codes); end
  def deposit_switch; end
  def deposit_switch=(_arg0); end
  def eql?(o); end
  def hash; end
  def income_verification; end
  def income_verification=(_arg0); end
  def institution_id; end
  def institution_id=(_arg0); end
  def language; end
  def language=(_arg0); end
  def link_customization_name; end
  def link_customization_name=(_arg0); end
  def list_invalid_properties; end
  def payment_initiation; end
  def payment_initiation=(_arg0); end
  def products; end
  def products=(_arg0); end
  def redirect_uri; end
  def redirect_uri=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def user; end
  def user=(_arg0); end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequestAccountSubtypes
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def credit; end
  def credit=(_arg0); end
  def depository; end
  def depository=(_arg0); end
  def eql?(o); end
  def hash; end
  def investment; end
  def investment=(_arg0); end
  def list_invalid_properties; end
  def loan; end
  def loan=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequestAuth
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def flow_type; end
  def flow_type=(flow_type); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequestAuth::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::LinkTokenCreateRequestDepositSwitch
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def deposit_switch_id; end
  def deposit_switch_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequestIncomeVerification
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def asset_report_id; end
  def asset_report_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def income_verification_id; end
  def income_verification_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequestPaymentInitiation
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateRequestUser
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_user_id; end
  def client_user_id=(_arg0); end
  def date_of_birth; end
  def date_of_birth=(_arg0); end
  def email_address; end
  def email_address=(_arg0); end
  def email_address_verified_time; end
  def email_address_verified_time=(_arg0); end
  def eql?(o); end
  def hash; end
  def legal_name; end
  def legal_name=(_arg0); end
  def list_invalid_properties; end
  def phone_number; end
  def phone_number=(_arg0); end
  def phone_number_verified_time; end
  def phone_number_verified_time=(_arg0); end
  def ssn; end
  def ssn=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def expiration; end
  def expiration=(_arg0); end
  def hash; end
  def link_token; end
  def link_token=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenGetMetadataResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_filters; end
  def account_filters=(_arg0); end
  def build_from_hash(attributes); end
  def client_name; end
  def client_name=(_arg0); end
  def country_codes; end
  def country_codes=(_arg0); end
  def eql?(o); end
  def hash; end
  def initial_products; end
  def initial_products=(_arg0); end
  def language; end
  def language=(_arg0); end
  def list_invalid_properties; end
  def redirect_uri; end
  def redirect_uri=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def link_token; end
  def link_token=(_arg0); end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LinkTokenGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def created_at; end
  def created_at=(_arg0); end
  def eql?(o); end
  def expiration; end
  def expiration=(_arg0); end
  def hash; end
  def link_token; end
  def link_token=(_arg0); end
  def list_invalid_properties; end
  def metadata; end
  def metadata=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::LoanFilter
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_subtypes; end
  def account_subtypes=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Location
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def lat; end
  def lat=(_arg0); end
  def list_invalid_properties; end
  def lon; end
  def lon=(_arg0); end
  def postal_code; end
  def postal_code=(_arg0); end
  def region; end
  def region=(_arg0); end
  def store_number; end
  def store_number=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::MFA
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def question_rounds; end
  def question_rounds=(_arg0); end
  def questions_per_round; end
  def questions_per_round=(_arg0); end
  def selection_rounds; end
  def selection_rounds=(_arg0); end
  def selections_per_question; end
  def selections_per_question=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Meta
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def limit; end
  def limit=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def official_name; end
  def official_name=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::MortgageInterestRate
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def percentage; end
  def percentage=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::MortgageLiability
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def account_number; end
  def account_number=(_arg0); end
  def build_from_hash(attributes); end
  def current_late_fee; end
  def current_late_fee=(_arg0); end
  def eql?(o); end
  def escrow_balance; end
  def escrow_balance=(_arg0); end
  def has_pmi; end
  def has_pmi=(_arg0); end
  def has_prepayment_penalty; end
  def has_prepayment_penalty=(_arg0); end
  def hash; end
  def interest_rate; end
  def interest_rate=(_arg0); end
  def last_payment_amount; end
  def last_payment_amount=(_arg0); end
  def last_payment_date; end
  def last_payment_date=(_arg0); end
  def list_invalid_properties; end
  def loan_term; end
  def loan_term=(_arg0); end
  def loan_type_description; end
  def loan_type_description=(_arg0); end
  def maturity_date; end
  def maturity_date=(_arg0); end
  def next_monthly_payment; end
  def next_monthly_payment=(_arg0); end
  def next_payment_due_date; end
  def next_payment_due_date=(_arg0); end
  def origination_date; end
  def origination_date=(_arg0); end
  def origination_principal_amount; end
  def origination_principal_amount=(_arg0); end
  def past_due_amount; end
  def past_due_amount=(_arg0); end
  def property_address; end
  def property_address=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def ytd_interest_paid; end
  def ytd_interest_paid=(_arg0); end
  def ytd_principal_paid; end
  def ytd_principal_paid=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::MortgagePropertyAddress
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def postal_code; end
  def postal_code=(_arg0); end
  def region; end
  def region=(_arg0); end
  def street; end
  def street=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableAccessToken
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableAddress
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def data; end
  def data=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def primary; end
  def primary=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableAddressData
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def postal_code; end
  def postal_code=(_arg0); end
  def region; end
  def region=(_arg0); end
  def street; end
  def street=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableItemStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def investments; end
  def investments=(_arg0); end
  def last_webhook; end
  def last_webhook=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions; end
  def transactions=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableNumbersACH
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def routing; end
  def routing=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def wire_routing; end
  def wire_routing=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableNumbersBACS
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def sort_code; end
  def sort_code=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableNumbersEFT
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def branch; end
  def branch=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def institution; end
  def institution=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableNumbersInternational
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def bic; end
  def bic=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NullableRecipientBACS
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def sort_code; end
  def sort_code=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Numbers
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def ach_routing; end
  def ach_routing=(_arg0); end
  def ach_wire_routing; end
  def ach_wire_routing=(_arg0); end
  def bacs_sort_code; end
  def bacs_sort_code=(_arg0); end
  def build_from_hash(attributes); end
  def eft_branch; end
  def eft_branch=(_arg0); end
  def eft_institution; end
  def eft_institution=(_arg0); end
  def eql?(o); end
  def hash; end
  def international_bic; end
  def international_bic=(_arg0); end
  def international_iban; end
  def international_iban=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NumbersACH
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def routing; end
  def routing=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def wire_routing; end
  def wire_routing=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NumbersBACS
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def sort_code; end
  def sort_code=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NumbersEFT
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def branch; end
  def branch=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def institution; end
  def institution=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::NumbersInternational
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def bic; end
  def bic=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::OverrideAccounts
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def currency; end
  def currency=(_arg0); end
  def eql?(o); end
  def force_available_balance; end
  def force_available_balance=(_arg0); end
  def hash; end
  def identity; end
  def identity=(_arg0); end
  def inflow_model; end
  def inflow_model=(_arg0); end
  def liability; end
  def liability=(_arg0); end
  def list_invalid_properties; end
  def meta; end
  def meta=(_arg0); end
  def numbers; end
  def numbers=(_arg0); end
  def starting_balance; end
  def starting_balance=(_arg0); end
  def subtype; end
  def subtype=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions; end
  def transactions=(_arg0); end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Owner
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def addresses; end
  def addresses=(_arg0); end
  def build_from_hash(attributes); end
  def emails; end
  def emails=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def names; end
  def names=(_arg0); end
  def phone_numbers; end
  def phone_numbers=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::OwnerOverride
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def addresses; end
  def addresses=(_arg0); end
  def build_from_hash(attributes); end
  def emails; end
  def emails=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def names; end
  def names=(_arg0); end
  def phone_numbers; end
  def phone_numbers=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PSLFStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def estimated_eligibility_date; end
  def estimated_eligibility_date=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def payments_made; end
  def payments_made=(_arg0); end
  def payments_remaining; end
  def payments_remaining=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PayFrequency
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(value); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PayFrequency::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::PayPeriodDetails
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def check_amount; end
  def check_amount=(_arg0); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def gross_earnings; end
  def gross_earnings=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def pay_day; end
  def pay_day=(_arg0); end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentAmount
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def currency; end
  def currency=(currency); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentAmount::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::PaymentInitiationAddress
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def postal_code; end
  def postal_code=(_arg0); end
  def street; end
  def street=(street); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationMetadata
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def maximum_payment_amount; end
  def maximum_payment_amount=(_arg0); end
  def standing_order_metadata; end
  def standing_order_metadata=(_arg0); end
  def supports_international_payments; end
  def supports_international_payments=(_arg0); end
  def supports_refund_details; end
  def supports_refund_details=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationOptionalRestrictionBacs
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def sort_code; end
  def sort_code=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPayment
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def adjusted_reference; end
  def adjusted_reference=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def emi_account_id; end
  def emi_account_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def last_status_update; end
  def last_status_update=(_arg0); end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def reference; end
  def reference=(_arg0); end
  def refund_details; end
  def refund_details=(_arg0); end
  def schedule; end
  def schedule=(_arg0); end
  def status; end
  def status=(status); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPayment::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::PaymentInitiationPaymentCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def amount; end
  def amount=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def reference; end
  def reference=(_arg0); end
  def schedule; end
  def schedule=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def status; end
  def status=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def adjusted_reference; end
  def adjusted_reference=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def emi_account_id; end
  def emi_account_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def last_status_update; end
  def last_status_update=(_arg0); end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def reference; end
  def reference=(_arg0); end
  def refund_details; end
  def refund_details=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def schedule; end
  def schedule=(_arg0); end
  def status; end
  def status=(status); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentGetResponse::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::PaymentInitiationPaymentListRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def count; end
  def count=(count); end
  def cursor; end
  def cursor=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentListResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def next_cursor; end
  def next_cursor=(_arg0); end
  def payments; end
  def payments=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payment_id; end
  def payment_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationPaymentTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payment_token; end
  def payment_token=(_arg0); end
  def payment_token_expiration_time; end
  def payment_token_expiration_time=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipient
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def emi_recipient_id; end
  def emi_recipient_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def address; end
  def address=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def emi_recipient_id; end
  def emi_recipient_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def iban; end
  def iban=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def recipient_id; end
  def recipient_id=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientGetResponseAllOf
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientListRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationRecipientListResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def recipients; end
  def recipients=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentInitiationStandingOrderMetadata
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def supports_standing_order_end_date; end
  def supports_standing_order_end_date=(_arg0); end
  def supports_standing_order_negative_execution_days; end
  def supports_standing_order_negative_execution_days=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def valid_standing_order_intervals; end
  def valid_standing_order_intervals=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentMeta
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def by_order_of; end
  def by_order_of=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def payee; end
  def payee=(_arg0); end
  def payer; end
  def payer=(_arg0); end
  def payment_method; end
  def payment_method=(_arg0); end
  def payment_processor; end
  def payment_processor=(_arg0); end
  def ppd_id; end
  def ppd_id=(_arg0); end
  def reason; end
  def reason=(_arg0); end
  def reference_number; end
  def reference_number=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentScheduleInterval
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::PaymentScheduleInterval::MONTHLY = T.let(T.unsafe(nil), String)
Plaid::PaymentScheduleInterval::WEEKLY = T.let(T.unsafe(nil), String)

class Plaid::PaymentStatusUpdateWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def adjusted_reference; end
  def adjusted_reference=(_arg0); end
  def adjusted_start_date; end
  def adjusted_start_date=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def new_payment_status; end
  def new_payment_status=(new_payment_status); end
  def old_payment_status; end
  def old_payment_status=(old_payment_status); end
  def original_reference; end
  def original_reference=(_arg0); end
  def original_start_date; end
  def original_start_date=(_arg0); end
  def payment_id; end
  def payment_id=(_arg0); end
  def timestamp; end
  def timestamp=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaymentStatusUpdateWebhook::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::Paystub
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def employee; end
  def employee=(_arg0); end
  def employer; end
  def employer=(_arg0); end
  def eql?(o); end
  def hash; end
  def income_breakdown; end
  def income_breakdown=(_arg0); end
  def list_invalid_properties; end
  def pay_period_details; end
  def pay_period_details=(_arg0); end
  def paystub_id; end
  def paystub_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def ytd_earnings; end
  def ytd_earnings=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaystubDeduction
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def is_pretax; end
  def is_pretax=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def total; end
  def total=(_arg0); end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PaystubYTDDetails
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def gross_earnings; end
  def gross_earnings=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def net_earnings; end
  def net_earnings=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PendingExpirationWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def consent_expiration_time; end
  def consent_expiration_time=(_arg0); end
  def eql?(o); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PhoneNumber
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def data; end
  def data=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def primary; end
  def primary=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(type); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::PhoneNumber::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::PlaidApi
  def initialize(api_client = T.unsafe(nil)); end

  def accounts_balance_get(accounts_balance_get_request, opts = T.unsafe(nil)); end
  def accounts_balance_get_with_http_info(accounts_balance_get_request, opts = T.unsafe(nil)); end
  def accounts_get(accounts_get_request, opts = T.unsafe(nil)); end
  def accounts_get_with_http_info(accounts_get_request, opts = T.unsafe(nil)); end
  def api_client; end
  def api_client=(_arg0); end
  def application_get(application_get_request, opts = T.unsafe(nil)); end
  def application_get_with_http_info(application_get_request, opts = T.unsafe(nil)); end
  def asset_report_audit_copy_create(asset_report_audit_copy_create_request, opts = T.unsafe(nil)); end
  def asset_report_audit_copy_create_with_http_info(asset_report_audit_copy_create_request, opts = T.unsafe(nil)); end
  def asset_report_audit_copy_get(asset_report_audit_copy_get_request, opts = T.unsafe(nil)); end
  def asset_report_audit_copy_get_with_http_info(asset_report_audit_copy_get_request, opts = T.unsafe(nil)); end
  def asset_report_audit_copy_remove(asset_report_audit_copy_remove_request, opts = T.unsafe(nil)); end
  def asset_report_audit_copy_remove_with_http_info(asset_report_audit_copy_remove_request, opts = T.unsafe(nil)); end
  def asset_report_create(asset_report_create_request, opts = T.unsafe(nil)); end
  def asset_report_create_with_http_info(asset_report_create_request, opts = T.unsafe(nil)); end
  def asset_report_filter(asset_report_filter_request, opts = T.unsafe(nil)); end
  def asset_report_filter_with_http_info(asset_report_filter_request, opts = T.unsafe(nil)); end
  def asset_report_get(asset_report_get_request, opts = T.unsafe(nil)); end
  def asset_report_get_with_http_info(asset_report_get_request, opts = T.unsafe(nil)); end
  def asset_report_pdf_get(asset_report_pdf_get_request, opts = T.unsafe(nil)); end
  def asset_report_pdf_get_with_http_info(asset_report_pdf_get_request, opts = T.unsafe(nil)); end
  def asset_report_refresh(asset_report_refresh_request, opts = T.unsafe(nil)); end
  def asset_report_refresh_with_http_info(asset_report_refresh_request, opts = T.unsafe(nil)); end
  def asset_report_remove(asset_report_remove_request, opts = T.unsafe(nil)); end
  def asset_report_remove_with_http_info(asset_report_remove_request, opts = T.unsafe(nil)); end
  def auth_get(auth_get_request, opts = T.unsafe(nil)); end
  def auth_get_with_http_info(auth_get_request, opts = T.unsafe(nil)); end
  def bank_transfer_balance_get(bank_transfer_balance_get_request, opts = T.unsafe(nil)); end
  def bank_transfer_balance_get_with_http_info(bank_transfer_balance_get_request, opts = T.unsafe(nil)); end
  def bank_transfer_cancel(bank_transfer_cancel_request, opts = T.unsafe(nil)); end
  def bank_transfer_cancel_with_http_info(bank_transfer_cancel_request, opts = T.unsafe(nil)); end
  def bank_transfer_create(bank_transfer_create_request, opts = T.unsafe(nil)); end
  def bank_transfer_create_with_http_info(bank_transfer_create_request, opts = T.unsafe(nil)); end
  def bank_transfer_event_list(bank_transfer_event_list_request, opts = T.unsafe(nil)); end
  def bank_transfer_event_list_with_http_info(bank_transfer_event_list_request, opts = T.unsafe(nil)); end
  def bank_transfer_event_sync(bank_transfer_event_sync_request, opts = T.unsafe(nil)); end
  def bank_transfer_event_sync_with_http_info(bank_transfer_event_sync_request, opts = T.unsafe(nil)); end
  def bank_transfer_get(bank_transfer_get_request, opts = T.unsafe(nil)); end
  def bank_transfer_get_with_http_info(bank_transfer_get_request, opts = T.unsafe(nil)); end
  def bank_transfer_list(bank_transfer_list_request, opts = T.unsafe(nil)); end
  def bank_transfer_list_with_http_info(bank_transfer_list_request, opts = T.unsafe(nil)); end
  def bank_transfer_migrate_account(bank_transfer_migrate_account_request, opts = T.unsafe(nil)); end
  def bank_transfer_migrate_account_with_http_info(bank_transfer_migrate_account_request, opts = T.unsafe(nil)); end
  def categories_get(body, opts = T.unsafe(nil)); end
  def categories_get_with_http_info(body, opts = T.unsafe(nil)); end
  def create_payment_token(payment_initiation_payment_token_create_request, opts = T.unsafe(nil)); end
  def create_payment_token_with_http_info(payment_initiation_payment_token_create_request, opts = T.unsafe(nil)); end
  def deposit_switch_alt_create(deposit_switch_alt_create_request, opts = T.unsafe(nil)); end
  def deposit_switch_alt_create_with_http_info(deposit_switch_alt_create_request, opts = T.unsafe(nil)); end
  def deposit_switch_create(deposit_switch_create_request, opts = T.unsafe(nil)); end
  def deposit_switch_create_with_http_info(deposit_switch_create_request, opts = T.unsafe(nil)); end
  def deposit_switch_get(deposit_switch_get_request, opts = T.unsafe(nil)); end
  def deposit_switch_get_with_http_info(deposit_switch_get_request, opts = T.unsafe(nil)); end
  def deposit_switch_token_create(deposit_switch_token_create_request, opts = T.unsafe(nil)); end
  def deposit_switch_token_create_with_http_info(deposit_switch_token_create_request, opts = T.unsafe(nil)); end
  def employers_search(employers_search_request, opts = T.unsafe(nil)); end
  def employers_search_with_http_info(employers_search_request, opts = T.unsafe(nil)); end
  def identity_get(identity_get_request, opts = T.unsafe(nil)); end
  def identity_get_with_http_info(identity_get_request, opts = T.unsafe(nil)); end
  def income_verification_create(income_verification_create_request, opts = T.unsafe(nil)); end
  def income_verification_create_with_http_info(income_verification_create_request, opts = T.unsafe(nil)); end
  def income_verification_documents_download(income_verification_documents_download_request, opts = T.unsafe(nil)); end
  def income_verification_documents_download_with_http_info(income_verification_documents_download_request, opts = T.unsafe(nil)); end
  def income_verification_paystub_get(income_verification_paystub_get_request, opts = T.unsafe(nil)); end
  def income_verification_paystub_get_with_http_info(income_verification_paystub_get_request, opts = T.unsafe(nil)); end
  def income_verification_summary_get(income_verification_summary_get_request, opts = T.unsafe(nil)); end
  def income_verification_summary_get_with_http_info(income_verification_summary_get_request, opts = T.unsafe(nil)); end
  def institutions_get(institutions_get_request, opts = T.unsafe(nil)); end
  def institutions_get_by_id(institutions_get_by_id_request, opts = T.unsafe(nil)); end
  def institutions_get_by_id_with_http_info(institutions_get_by_id_request, opts = T.unsafe(nil)); end
  def institutions_get_with_http_info(institutions_get_request, opts = T.unsafe(nil)); end
  def institutions_search(institutions_search_request, opts = T.unsafe(nil)); end
  def institutions_search_with_http_info(institutions_search_request, opts = T.unsafe(nil)); end
  def investments_holdings_get(investments_holdings_get_request, opts = T.unsafe(nil)); end
  def investments_holdings_get_with_http_info(investments_holdings_get_request, opts = T.unsafe(nil)); end
  def investments_transactions_get(investments_transactions_get_request, opts = T.unsafe(nil)); end
  def investments_transactions_get_with_http_info(investments_transactions_get_request, opts = T.unsafe(nil)); end
  def item_access_token_invalidate(item_access_token_invalidate_request, opts = T.unsafe(nil)); end
  def item_access_token_invalidate_with_http_info(item_access_token_invalidate_request, opts = T.unsafe(nil)); end
  def item_create_public_token(item_public_token_create_request, opts = T.unsafe(nil)); end
  def item_create_public_token_with_http_info(item_public_token_create_request, opts = T.unsafe(nil)); end
  def item_get(item_get_request, opts = T.unsafe(nil)); end
  def item_get_with_http_info(item_get_request, opts = T.unsafe(nil)); end
  def item_import(item_import_request, opts = T.unsafe(nil)); end
  def item_import_with_http_info(item_import_request, opts = T.unsafe(nil)); end
  def item_public_token_exchange(item_public_token_exchange_request, opts = T.unsafe(nil)); end
  def item_public_token_exchange_with_http_info(item_public_token_exchange_request, opts = T.unsafe(nil)); end
  def item_remove(item_remove_request, opts = T.unsafe(nil)); end
  def item_remove_with_http_info(item_remove_request, opts = T.unsafe(nil)); end
  def item_webhook_update(item_webhook_update_request, opts = T.unsafe(nil)); end
  def item_webhook_update_with_http_info(item_webhook_update_request, opts = T.unsafe(nil)); end
  def liabilities_get(liabilities_get_request, opts = T.unsafe(nil)); end
  def liabilities_get_with_http_info(liabilities_get_request, opts = T.unsafe(nil)); end
  def link_token_create(link_token_create_request, opts = T.unsafe(nil)); end
  def link_token_create_with_http_info(link_token_create_request, opts = T.unsafe(nil)); end
  def link_token_get(link_token_get_request, opts = T.unsafe(nil)); end
  def link_token_get_with_http_info(link_token_get_request, opts = T.unsafe(nil)); end
  def payment_initiation_payment_create(payment_initiation_payment_create_request, opts = T.unsafe(nil)); end
  def payment_initiation_payment_create_with_http_info(payment_initiation_payment_create_request, opts = T.unsafe(nil)); end
  def payment_initiation_payment_get(payment_initiation_payment_get_request, opts = T.unsafe(nil)); end
  def payment_initiation_payment_get_with_http_info(payment_initiation_payment_get_request, opts = T.unsafe(nil)); end
  def payment_initiation_payment_list(payment_initiation_payment_list_request, opts = T.unsafe(nil)); end
  def payment_initiation_payment_list_with_http_info(payment_initiation_payment_list_request, opts = T.unsafe(nil)); end
  def payment_initiation_recipient_create(payment_initiation_recipient_create_request, opts = T.unsafe(nil)); end
  def payment_initiation_recipient_create_with_http_info(payment_initiation_recipient_create_request, opts = T.unsafe(nil)); end
  def payment_initiation_recipient_get(payment_initiation_recipient_get_request, opts = T.unsafe(nil)); end
  def payment_initiation_recipient_get_with_http_info(payment_initiation_recipient_get_request, opts = T.unsafe(nil)); end
  def payment_initiation_recipient_list(payment_initiation_recipient_list_request, opts = T.unsafe(nil)); end
  def payment_initiation_recipient_list_with_http_info(payment_initiation_recipient_list_request, opts = T.unsafe(nil)); end
  def processor_apex_processor_token_create(processor_apex_processor_token_create_request, opts = T.unsafe(nil)); end
  def processor_apex_processor_token_create_with_http_info(processor_apex_processor_token_create_request, opts = T.unsafe(nil)); end
  def processor_auth_get(processor_auth_get_request, opts = T.unsafe(nil)); end
  def processor_auth_get_with_http_info(processor_auth_get_request, opts = T.unsafe(nil)); end
  def processor_balance_get(processor_balance_get_request, opts = T.unsafe(nil)); end
  def processor_balance_get_with_http_info(processor_balance_get_request, opts = T.unsafe(nil)); end
  def processor_identity_get(processor_identity_get_request, opts = T.unsafe(nil)); end
  def processor_identity_get_with_http_info(processor_identity_get_request, opts = T.unsafe(nil)); end
  def processor_stripe_bank_account_token_create(processor_stripe_bank_account_token_create_request, opts = T.unsafe(nil)); end
  def processor_stripe_bank_account_token_create_with_http_info(processor_stripe_bank_account_token_create_request, opts = T.unsafe(nil)); end
  def processor_token_create(processor_token_create_request, opts = T.unsafe(nil)); end
  def processor_token_create_with_http_info(processor_token_create_request, opts = T.unsafe(nil)); end
  def sandbox_bank_transfer_fire_webhook(sandbox_bank_transfer_fire_webhook_request, opts = T.unsafe(nil)); end
  def sandbox_bank_transfer_fire_webhook_with_http_info(sandbox_bank_transfer_fire_webhook_request, opts = T.unsafe(nil)); end
  def sandbox_bank_transfer_simulate(sandbox_bank_transfer_simulate_request, opts = T.unsafe(nil)); end
  def sandbox_bank_transfer_simulate_with_http_info(sandbox_bank_transfer_simulate_request, opts = T.unsafe(nil)); end
  def sandbox_item_fire_webhook(sandbox_item_fire_webhook_request, opts = T.unsafe(nil)); end
  def sandbox_item_fire_webhook_with_http_info(sandbox_item_fire_webhook_request, opts = T.unsafe(nil)); end
  def sandbox_item_reset_login(sandbox_item_reset_login_request, opts = T.unsafe(nil)); end
  def sandbox_item_reset_login_with_http_info(sandbox_item_reset_login_request, opts = T.unsafe(nil)); end
  def sandbox_item_set_verification_status(sandbox_item_set_verification_status_request, opts = T.unsafe(nil)); end
  def sandbox_item_set_verification_status_with_http_info(sandbox_item_set_verification_status_request, opts = T.unsafe(nil)); end
  def sandbox_processor_token_create(sandbox_processor_token_create_request, opts = T.unsafe(nil)); end
  def sandbox_processor_token_create_with_http_info(sandbox_processor_token_create_request, opts = T.unsafe(nil)); end
  def sandbox_public_token_create(sandbox_public_token_create_request, opts = T.unsafe(nil)); end
  def sandbox_public_token_create_with_http_info(sandbox_public_token_create_request, opts = T.unsafe(nil)); end
  def transactions_get(transactions_get_request, opts = T.unsafe(nil)); end
  def transactions_get_with_http_info(transactions_get_request, opts = T.unsafe(nil)); end
  def transactions_refresh(transactions_refresh_request, opts = T.unsafe(nil)); end
  def transactions_refresh_with_http_info(transactions_refresh_request, opts = T.unsafe(nil)); end
  def webhook_verification_key_get(webhook_verification_key_get_request, opts = T.unsafe(nil)); end
  def webhook_verification_key_get_with_http_info(webhook_verification_key_get_request, opts = T.unsafe(nil)); end
end

class Plaid::ProcessorApexProcessorTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorAuthGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def processor_token; end
  def processor_token=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorAuthGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def numbers; end
  def numbers=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorBalanceGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def processor_token; end
  def processor_token=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorBalanceGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorIdentityGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def processor_token; end
  def processor_token=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorIdentityGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorNumber
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def ach; end
  def ach=(_arg0); end
  def bacs; end
  def bacs=(_arg0); end
  def build_from_hash(attributes); end
  def eft; end
  def eft=(_arg0); end
  def eql?(o); end
  def hash; end
  def international; end
  def international=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorStripeBankAccountTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorStripeBankAccountTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def stripe_bank_account_token; end
  def stripe_bank_account_token=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def processor; end
  def processor=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProcessorTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def processor_token; end
  def processor_token=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProductStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def breakdown; end
  def breakdown=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def last_status_change; end
  def last_status_change=(_arg0); end
  def list_invalid_properties; end
  def status; end
  def status=(status); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProductStatus::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::ProductStatusBreakdown
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error_institution; end
  def error_institution=(_arg0); end
  def error_plaid; end
  def error_plaid=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def refresh_interval; end
  def refresh_interval=(refresh_interval); end
  def success; end
  def success=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ProductStatusBreakdown::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::Products
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::Products::ASSETS = T.let(T.unsafe(nil), String)
Plaid::Products::AUTH = T.let(T.unsafe(nil), String)
Plaid::Products::BALANCE = T.let(T.unsafe(nil), String)
Plaid::Products::CREDIT_DETAILS = T.let(T.unsafe(nil), String)
Plaid::Products::DEPOSIT_SWITCH = T.let(T.unsafe(nil), String)
Plaid::Products::IDENTITY = T.let(T.unsafe(nil), String)
Plaid::Products::INCOME = T.let(T.unsafe(nil), String)
Plaid::Products::INVESTMENTS = T.let(T.unsafe(nil), String)
Plaid::Products::LIABILITIES = T.let(T.unsafe(nil), String)
Plaid::Products::PAYMENT_INITIATION = T.let(T.unsafe(nil), String)
Plaid::Products::STANDING_ORDERS = T.let(T.unsafe(nil), String)
Plaid::Products::TRANSACTIONS = T.let(T.unsafe(nil), String)

class Plaid::ProjectedIncomeSummaryFieldNumber
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::RecaptchaRequiredError
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def common_causes; end
  def common_causes=(_arg0); end
  def display_message; end
  def display_message=(_arg0); end
  def eql?(o); end
  def error_code; end
  def error_code=(_arg0); end
  def error_type; end
  def error_type=(_arg0); end
  def hash; end
  def http_code; end
  def http_code=(_arg0); end
  def link_user_experience; end
  def link_user_experience=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def troubleshooting_steps; end
  def troubleshooting_steps=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::RecipientBACS
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account; end
  def account=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def sort_code; end
  def sort_code=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxBankTransferFireWebhookRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxBankTransferFireWebhookResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxBankTransferSimulateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def bank_transfer_id; end
  def bank_transfer_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def event_type; end
  def event_type=(_arg0); end
  def failure_reason; end
  def failure_reason=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxBankTransferSimulateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxItemFireWebhookRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(webhook_code); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxItemFireWebhookRequest::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::SandboxItemFireWebhookResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_fired; end
  def webhook_fired=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxItemResetLoginRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxItemResetLoginResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def reset_login; end
  def reset_login=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxItemSetVerificationStatusRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def verification_status; end
  def verification_status=(verification_status); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxItemSetVerificationStatusRequest::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::SandboxItemSetVerificationStatusResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxProcessorTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def institution_id; end
  def institution_id=(_arg0); end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxProcessorTokenCreateRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def override_password; end
  def override_password=(_arg0); end
  def override_username; end
  def override_username=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxProcessorTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def processor_token; end
  def processor_token=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxPublicTokenCreateRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def initial_products; end
  def initial_products=(initial_products); end
  def institution_id; end
  def institution_id=(_arg0); end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxPublicTokenCreateRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def override_password; end
  def override_password=(_arg0); end
  def override_username; end
  def override_username=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transactions; end
  def transactions=(_arg0); end
  def valid?; end
  def webhook; end
  def webhook=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxPublicTokenCreateRequestOptionsTransactions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::SandboxPublicTokenCreateResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def public_token; end
  def public_token=(_arg0); end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Security
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def close_price; end
  def close_price=(_arg0); end
  def close_price_as_of; end
  def close_price_as_of=(_arg0); end
  def cusip; end
  def cusip=(_arg0); end
  def eql?(o); end
  def hash; end
  def institution_id; end
  def institution_id=(_arg0); end
  def institution_security_id; end
  def institution_security_id=(_arg0); end
  def is_cash_equivalent; end
  def is_cash_equivalent=(_arg0); end
  def isin; end
  def isin=(_arg0); end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def name; end
  def name=(_arg0); end
  def proxy_security_id; end
  def proxy_security_id=(_arg0); end
  def security_id; end
  def security_id=(_arg0); end
  def sedol; end
  def sedol=(_arg0); end
  def ticker_symbol; end
  def ticker_symbol=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::ServicerAddressData
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def city; end
  def city=(_arg0); end
  def country; end
  def country=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def postal_code; end
  def postal_code=(_arg0); end
  def region; end
  def region=(_arg0); end
  def street; end
  def street=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StandaloneAccountType
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def credit; end
  def credit=(_arg0); end
  def depository; end
  def depository=(_arg0); end
  def eql?(o); end
  def hash; end
  def investment; end
  def investment=(_arg0); end
  def list_invalid_properties; end
  def loan; end
  def loan=(_arg0); end
  def other; end
  def other=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StandaloneCurrencyCodeList
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StandaloneInvestmentTransactionSubtype
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_fee; end
  def account_fee=(_arg0); end
  def assignment; end
  def assignment=(_arg0); end
  def build_from_hash(attributes); end
  def buy; end
  def buy=(_arg0); end
  def buy_to_cover; end
  def buy_to_cover=(_arg0); end
  def contribution; end
  def contribution=(_arg0); end
  def deposit; end
  def deposit=(_arg0); end
  def distribution; end
  def distribution=(_arg0); end
  def dividend; end
  def dividend=(_arg0); end
  def dividend_reinvestment; end
  def dividend_reinvestment=(_arg0); end
  def eql?(o); end
  def exercise; end
  def exercise=(_arg0); end
  def expire; end
  def expire=(_arg0); end
  def fund_fee; end
  def fund_fee=(_arg0); end
  def hash; end
  def interest; end
  def interest=(_arg0); end
  def interest_receivable; end
  def interest_receivable=(_arg0); end
  def interest_reinvestment; end
  def interest_reinvestment=(_arg0); end
  def legal_fee; end
  def legal_fee=(_arg0); end
  def list_invalid_properties; end
  def loan_payment; end
  def loan_payment=(_arg0); end
  def long_term_capital_gain; end
  def long_term_capital_gain=(_arg0); end
  def long_term_capital_gain_reinvestment; end
  def long_term_capital_gain_reinvestment=(_arg0); end
  def management_fee; end
  def management_fee=(_arg0); end
  def margin_expense; end
  def margin_expense=(_arg0); end
  def merger; end
  def merger=(_arg0); end
  def miscellaneous_fee; end
  def miscellaneous_fee=(_arg0); end
  def non_qualified_dividend; end
  def non_qualified_dividend=(_arg0); end
  def non_resident_tax; end
  def non_resident_tax=(_arg0); end
  def pending_credit; end
  def pending_credit=(_arg0); end
  def pending_debit; end
  def pending_debit=(_arg0); end
  def qualified_dividend; end
  def qualified_dividend=(_arg0); end
  def rebalance; end
  def rebalance=(_arg0); end
  def return_of_principal; end
  def return_of_principal=(_arg0); end
  def sell; end
  def sell=(_arg0); end
  def sell_short; end
  def sell_short=(_arg0); end
  def short_term_capital_gain; end
  def short_term_capital_gain=(_arg0); end
  def short_term_capital_gain_reinvestment; end
  def short_term_capital_gain_reinvestment=(_arg0); end
  def spin_off; end
  def spin_off=(_arg0); end
  def split; end
  def split=(_arg0); end
  def stock_distribution; end
  def stock_distribution=(_arg0); end
  def tax; end
  def tax=(_arg0); end
  def tax_withheld; end
  def tax_withheld=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transfer; end
  def transfer=(_arg0); end
  def transfer_fee; end
  def transfer_fee=(_arg0); end
  def trust_fee; end
  def trust_fee=(_arg0); end
  def unqualified_gain; end
  def unqualified_gain=(_arg0); end
  def valid?; end
  def withdrawal; end
  def withdrawal=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StandaloneInvestmentTransactionType
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def buy; end
  def buy=(_arg0); end
  def cancel; end
  def cancel=(_arg0); end
  def cash; end
  def cash=(_arg0); end
  def eql?(o); end
  def fee; end
  def fee=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def sell; end
  def sell=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transfer; end
  def transfer=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StudentLoan
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def account_number; end
  def account_number=(_arg0); end
  def build_from_hash(attributes); end
  def disbursement_dates; end
  def disbursement_dates=(_arg0); end
  def eql?(o); end
  def expected_payoff_date; end
  def expected_payoff_date=(_arg0); end
  def guarantor; end
  def guarantor=(_arg0); end
  def hash; end
  def interest_rate_percentage; end
  def interest_rate_percentage=(_arg0); end
  def is_overdue; end
  def is_overdue=(_arg0); end
  def last_payment_amount; end
  def last_payment_amount=(_arg0); end
  def last_payment_date; end
  def last_payment_date=(_arg0); end
  def last_statement_issue_date; end
  def last_statement_issue_date=(_arg0); end
  def list_invalid_properties; end
  def loan_name; end
  def loan_name=(_arg0); end
  def loan_status; end
  def loan_status=(_arg0); end
  def minimum_payment_amount; end
  def minimum_payment_amount=(_arg0); end
  def next_payment_due_date; end
  def next_payment_due_date=(_arg0); end
  def origination_date; end
  def origination_date=(_arg0); end
  def origination_principal_amount; end
  def origination_principal_amount=(_arg0); end
  def outstanding_interest_amount; end
  def outstanding_interest_amount=(_arg0); end
  def payment_reference_number; end
  def payment_reference_number=(_arg0); end
  def pslf_status; end
  def pslf_status=(_arg0); end
  def repayment_plan; end
  def repayment_plan=(_arg0); end
  def sequence_number; end
  def sequence_number=(_arg0); end
  def servicer_address; end
  def servicer_address=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def ytd_interest_paid; end
  def ytd_interest_paid=(_arg0); end
  def ytd_principal_paid; end
  def ytd_principal_paid=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StudentLoanRepaymentModel
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def non_repayment_months; end
  def non_repayment_months=(_arg0); end
  def repayment_months; end
  def repayment_months=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StudentLoanStatus
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(type); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StudentLoanStatus::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::StudentRepaymentPlan
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def description; end
  def description=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def type; end
  def type=(type); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::StudentRepaymentPlan::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::Transaction
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def account_owner; end
  def account_owner=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def authorized_date; end
  def authorized_date=(_arg0); end
  def authorized_datetime; end
  def authorized_datetime=(_arg0); end
  def build_from_hash(attributes); end
  def category; end
  def category=(_arg0); end
  def category_id; end
  def category_id=(_arg0); end
  def date; end
  def date=(_arg0); end
  def datetime; end
  def datetime=(_arg0); end
  def eql?(o); end
  def hash; end
  def iso_currency_code; end
  def iso_currency_code=(_arg0); end
  def list_invalid_properties; end
  def location; end
  def location=(_arg0); end
  def merchant_name; end
  def merchant_name=(_arg0); end
  def name; end
  def name=(_arg0); end
  def payment_channel; end
  def payment_channel=(payment_channel); end
  def payment_meta; end
  def payment_meta=(_arg0); end
  def pending; end
  def pending=(_arg0); end
  def pending_transaction_id; end
  def pending_transaction_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transaction_code; end
  def transaction_code=(_arg0); end
  def transaction_id; end
  def transaction_id=(_arg0); end
  def transaction_type; end
  def transaction_type=(transaction_type); end
  def unofficial_currency_code; end
  def unofficial_currency_code=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::Transaction::EnumAttributeValidator
  def initialize(datatype, allowable_values); end

  def allowable_values; end
  def datatype; end
  def valid?(value); end
end

class Plaid::TransactionCode
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::TransactionCode::ADJUSTMENT = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::ATM = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::BANK_CHARGE = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::BILL_PAYMENT = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::CASH = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::CASHBACK = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::CHEQUE = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::DIRECT_DEBIT = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::INTEREST = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::NULL = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::PURCHASE = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::STANDING_ORDER = T.let(T.unsafe(nil), String)
Plaid::TransactionCode::TRANSFER = T.let(T.unsafe(nil), String)

class Plaid::TransactionData
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def amount; end
  def amount=(_arg0); end
  def build_from_hash(attributes); end
  def date; end
  def date=(_arg0); end
  def description; end
  def description=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def transaction_id; end
  def transaction_id=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionOverride
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def amount; end
  def amount=(_arg0); end
  def build_from_hash(attributes); end
  def currency; end
  def currency=(_arg0); end
  def date_posted; end
  def date_posted=(_arg0); end
  def date_transacted; end
  def date_transacted=(_arg0); end
  def description; end
  def description=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionsGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def end_date; end
  def end_date=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def options; end
  def options=(_arg0); end
  def secret; end
  def secret=(_arg0); end
  def start_date; end
  def start_date=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionsGetRequestOptions
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_ids; end
  def account_ids=(_arg0); end
  def build_from_hash(attributes); end
  def count; end
  def count=(count); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def offset; end
  def offset=(offset); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionsGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def accounts; end
  def accounts=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item; end
  def item=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def total_transactions; end
  def total_transactions=(_arg0); end
  def transactions; end
  def transactions=(_arg0); end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionsRefreshRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def access_token; end
  def access_token=(_arg0); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionsRefreshResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::TransactionsRemovedWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def removed_transactions; end
  def removed_transactions=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::UserCustomPassword
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def force_error; end
  def force_error=(_arg0); end
  def hash; end
  def list_invalid_properties; end
  def mfa; end
  def mfa=(_arg0); end
  def override_accounts; end
  def override_accounts=(_arg0); end
  def recaptcha; end
  def recaptcha=(_arg0); end
  def seed; end
  def seed=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def version; end
  def version=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::UserPermissionRevokedWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

Plaid::VERSION = T.let(T.unsafe(nil), String)

class Plaid::VerificationExpiredWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def account_id; end
  def account_id=(_arg0); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::VerificationStatus
  def build_from_hash(value); end

  class << self
    def build_from_hash(value); end
  end
end

Plaid::VerificationStatus::NEEDS_INFO = T.let(T.unsafe(nil), String)
Plaid::VerificationStatus::UNABLE_TO_VERIFY = T.let(T.unsafe(nil), String)
Plaid::VerificationStatus::UNKNOWN = T.let(T.unsafe(nil), String)
Plaid::VerificationStatus::UNVERIFIED = T.let(T.unsafe(nil), String)
Plaid::VerificationStatus::VERIFIED = T.let(T.unsafe(nil), String)

class Plaid::Warning
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def cause; end
  def cause=(_arg0); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def warning_code; end
  def warning_code=(_arg0); end
  def warning_type; end
  def warning_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::WebhookUpdateAcknowledgedWebhook
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def error; end
  def error=(_arg0); end
  def hash; end
  def item_id; end
  def item_id=(_arg0); end
  def list_invalid_properties; end
  def new_webhook_url; end
  def new_webhook_url=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def webhook_code; end
  def webhook_code=(_arg0); end
  def webhook_type; end
  def webhook_type=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::WebhookVerificationKeyGetRequest
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def client_id; end
  def client_id=(_arg0); end
  def eql?(o); end
  def hash; end
  def key_id; end
  def key_id=(_arg0); end
  def list_invalid_properties; end
  def secret; end
  def secret=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::WebhookVerificationKeyGetResponse
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def key; end
  def key=(_arg0); end
  def list_invalid_properties; end
  def request_id; end
  def request_id=(_arg0); end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::YTDGrossIncomeSummaryFieldNumber
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end

class Plaid::YTDNetIncomeSummaryFieldNumber
  def initialize(attributes = T.unsafe(nil)); end

  def ==(o); end
  def _deserialize(type, value); end
  def _to_hash(value); end
  def build_from_hash(attributes); end
  def eql?(o); end
  def hash; end
  def list_invalid_properties; end
  def to_body; end
  def to_hash; end
  def to_s; end
  def valid?; end
  def value; end
  def value=(_arg0); end
  def verification_status; end
  def verification_status=(_arg0); end

  class << self
    def acceptable_attributes; end
    def attribute_map; end
    def build_from_hash(attributes); end
    def openapi_all_of; end
    def openapi_nullable; end
    def openapi_types; end
  end
end
